#!/bin/bash
# Script automatisant la connexion aux réseaux connus
# MerMouY Gnu
# Version:0.1
# Ce script requiert un fichier passé en argument ou lira le fichier $HOME/.config/wepass
# Vous trouverez un exemple de fichier de sources rédigé dans $HOME/.config/wepass
# Vous pouvez également lancer la commande wepass -c pour le créer interactivement ou encore lancer wepass -g pur en générer un vierge prêt à remplir

###VARIABLES À ÉDITER AU BESOIN
#Commande wireless
Iw="iwconfig"

#Commande réseau
If="ifconfig"

#Interface réseau à configurer
Eth="wlan0"

###VARIABLES
#Fichier contenant les réseaux (passé en argument au script)
Fap="$1"
Fap1=".tempfap"
Wepfile="/etc/wepass"
Weptemp="/temp/.tempwep"

###FIN DES VARIABLES

#Vérification superutilisateur
#if [[ $EUID -ne 0 ]]; then
#	zenity --error --text="You Must be Root to manage wireless card\!" --title="Wepass" --timeout=3
#	exit 0
#fi

# Création d'un fichier de sources vide
Createwepassvide () {
if [ -f $Wepfile ] 
then Ecrase=$(zenity --question --text="<span color=\"red\">Le fichier existe\!</span>\nContinuer quand même et l'écraser?")
fi
echo -e "#!/bin/bash\n#Ce fichier à été généré automatiquement par Wepass\n\n#Point d'accès	Nom du réseau	Clé	Auto ou Adresse	Canal	Passerelle	Dns1	Dns2\n#Voici un exemple d'entrée (il faut bien sûr supprimer le '#')\n00:00:00:00:00:00	Mywifi	secretkey	auto	6\n
#00:00:00:00:00:11	NextdoorWifi	hfqhfdsmhgqshgmkqhsgkmh	192.168.0.2	11	192.168.0.1	8.8.8.8	4.4.4.4\n#Acces Point	Name	Key	Address or auto	Channel	Gatheway	Dns1	Dns2\n" > $Wepfile || zenity --error --text="Création du fichier impossible\!\nSortie" && exit 0
zenity --info --text="Création du fichier réussie\!\n\nLe fichier se trouve à:\n\n $Wepfile" --width=300 
}

###FONCTIONS

#Vérifie les adresses entrées
IsIPv4 () {
if [ $# = 1 ]
then 
 printf $1 | grep -Eq '^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(25[0-4]|2[0-4][0-9]|[01]?[1-9][0-9]?)$'
 echo $?
else
 echo bad
fi
}

#Test de la connexion
Verif () {
ping -q -c 2 google.com >/dev/null 2>&1 
if [ $? -eq 0 ]; then 
	zenity --info --text="Vous êtes connecté."
	exit 0
else 
	zenity --question --text="Vous n'êtes pas connecté.\n\nRelancer l'assistant?" || exit 0
	if [ $? = 0 ]
		then exec $0 $1
	fi
fi
}

#Applique la configuration
function Applyconf () {
dns1="$7"
dns2="$8"
$Iw $Eth essid $3 key $4 ap $2 mode managed channel $6
if [ "$4" = "auto" ] || [ "$4" = "dhcp" ] || [ -z "$4" ]
	then dhclient $Eth &> .dhc | zenity --progress --auto-kill --pulsate --auto-close --text="Configuration automatique de $Eth" # Avec dhcp
	zenity --text-info --width=400 --filename=.dhc && rm .dhc
	Verif
# Validité des entrées adresse
elif [ $(IsIPv4 $4) = "bad" ] || [ $(IsIPv4 $7) = "bad" ] || [ $(IsIPv4 $8) = "bad" ] || [ $(IsIPv4 $6) = "bad" ]
	then zenity --error --text="Une de vos adresse est incorrecte\!\n\nModifiez votre fichier de sources..."
	exit 0
# Application des adresses entrées
else 
# Variables réseau
Adrbase=$(echo "$4" | sed 's/\(.*\)./\1/')
# Network
Net=$(echo "$Adrbase" | sed 's/\./\.0/')
# Broadcast
Broad=$(echo "$Adrbase" | sed 's/\./\.255/')
# Ifconfig
	$If $Eth inet $4 network $Net netmask 255.255.255.0 broadcast $Broad
# Passerelle
	route add default gw $6 || zenity --error
# Resolf.conf
	if [ -z "$dns2" ] && [ -z "$dns1" ] && [ -z "$6" ] # Si non fournis, utiliser google
		then echo -e "# Generated by Wepass\nnameserver 8.8.8.8\nnameserver 4.4.4.4" > /etc/resolv.conf
	elif [ -z "$dns2" ] && [ -z "$dns1" ] && [ ! -z "$6" ] # Si passerelle fournie, utiliser passerelle
		then echo -e "# Generated by Wepass\nnameserver $7" > /etc/resolv.conf
	elif [ -z "$dns2" ] && [ ! -z "$dns1" ] # Si un seul fournis ajout de la passerelle
		then echo -e "# Generated by Wepass\nnameserver $dns1\nnameserver $7" > /etc/resolv.conf
	else echo -e "# Generated by Wepass\nnameserver $dns1\nnameserver $dns2" > /etc/resolv.conf # Sinon écrire ceux fournis
# Vérification connexion
	Verif
	fi
fi
}


###SCRIPT

#Vérification fichier
if [ -z "$1" ] && [ ! -f $Wepfile ]
	then Quefaire=$(zenity --title="Wepass" --list --text="Il semble que vous n'ayez fourni aucun fichier de réseaux source.\nEt que le fichier référence <b>/etc/wepass</b> <u>youm.org</u> n'existe pas.\n\nVoulez-vous:" --column="Action" --hide-header "Créer un fichier vierge" "Éditer le fichier créé" "Sélectionner un fichier de sources") || exit 0
	if [ "$Quefaire" = "Créer un fichier vierge" ]
		then Createwepassvide && gedit $Wepfile && exec ./$0 $Wepfile
	elif [ "$Quefaire" = "Éditer le fichier créé" ]
		then gedit $Wepfile && exec ./$0
	elif [ "$Quefaire" = "Sélectionner un fichier de sources" ]
		then Wepfilesel=$(zenity --file-selection --title="Choississez un fichiers de sources de réseaux Wep")
		exec ./$0 $Wepfilesel
	fi
elif [ "$1" = "-c" ]
	then Createwepass
elif [ "$1" = "-e" ]
	then gedit $Wepfile
else exec ./$0 $Wepfile
fi

##Extraction des données
#Nettoyage fichier et numérotation des lignes
sed '/^[ ]*#/d' $Fap | sed '/^$/d' | sed = | sed '/./N;s/\n/ /' > $Fap1

#Extraction des Nom du réseaus de réseaux
Listap="$(awk -F ' ' '{print $1 " " $3}' $Fap1 | xargs)"

#Choix du réseau
N=$(zenity --title="Wepass" \
--text="Choisissez le réseau auquel vous connecter:" \
--list \
--hide-column 1 \
--column "#" \
--column "Essid" \
$Listap) || exit 0

#Confirmation avant configuration du réseau
Conf=$(cat $Fap1 | grep -E ^$N | sed -e "s/$N//")
zenity --question --text="Est-ce que vous voulez appliquer les paramêtres suivants?\n\n$Conf"
case $? in 
	1) rm $Fap1 && exec ./$0 ;;
	0) Applyconf ;;
esac
rm $Fap1
exit 0

